# -*- coding: utf-8 -*-
"""random_forest_nucleus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-M4D8EPF0NxhjrcCL5fFGpolhRIGw1iC

# Random Forest Classifier

## Import necessary packages
"""

import os

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split, validation_curve
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

"""## Load dataset"""

from google.colab import drive
drive.mount('/content/drive')

os.chdir("/content/drive/MyDrive/Colab Notebooks")

data_features = np.load("data/nucleus_level/nucleus_features.npy", allow_pickle=True)
data_labels = np.load("data/nucleus_level/nucleus_labels.npy", allow_pickle=True)

"""## Split data set into train and test sets"""

train_features, val_features, train_labels, val_labels = train_test_split(data_features, data_labels, test_size=0.2, random_state=1)

train_features_input = np.concatenate(train_features)
val_features_input = np.concatenate(val_features)
train_labels_input = np.concatenate(train_labels)
val_labels_input = np.concatenate(val_labels)

"""## Construct Random Forest classifier"""

rf_model = RandomForestClassifier(random_state=1, n_estimators=200, criterion='entropy', class_weight=None, min_samples_split=2, min_samples_leaf=2)

"""## Train classifier on training data set"""

rf_model.fit(train_features_input, train_labels_input)

"""## Make predictions on validation set and evaluate predictions"""

val_pred = rf_model.predict(val_features_input)

print(classification_report(val_labels_input, val_pred, digits=4))